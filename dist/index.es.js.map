{"version":3,"file":"index.es.js","sources":["../src/index.js"],"sourcesContent":["// Built-ins\nimport path from \"path\";\nimport fs from \"fs\";\nimport util from \"util\";\nimport crypto from \"crypto\";\n\n// Plugin-specific\nimport { createFilter } from \"@rollup/pluginutils\";\nimport chalk from \"chalk\";\nimport mkpath from \"mkpath\";\nimport imagemin from \"imagemin\";\nimport imageminJpegtran from \"imagemin-mozjpeg\";\nimport imageminPngquant from \"imagemin-optipng\";\nimport imageminGifsicle from \"imagemin-gifsicle\";\nimport imageminSvgo from \"imagemin-svgo\";\n\n// Promisified methods\nconst readFile = util.promisify(fs.readFile);\nconst writeFile = util.promisify(fs.writeFile);\nconst mkpathAsync = util.promisify(mkpath);\n\n// Returns a new object each time, so that it can't be modified (while it is exported)\n// It is required to export this value for testing\nexport const getDefaultOptions = () => JSON.parse(JSON.stringify({\n  disable: false,\n  verbose: false,\n  emitFiles: true,\n  hashLength: 16,\n  include: \"**/*.{svg,png,jpg,jpeg,gif}\",\n  exclude: \"\",\n  fileName: \"[name]-[hash][extname]\",\n  publicPath: \"\",\n  preserveTree: false,\n  jpegtran: {\n    progressive: true\n  },\n  pngquant: {\n    speed: 1,\n    strip: true\n  },\n  gifsicle: {\n    optimizationLevel: 3\n  },\n  svgo: {\n    precision: 1,\n    multipass: true\n  },\n  plugins: {}\n}));\n\nconst dropUndefinedKeys = obj => Object.entries(obj).reduce((acc, [key, val]) => {\n  if (typeof val !== \"undefined\") {\n    acc[key] = val;\n  }\n\n  return acc;\n}, {});\n\nexport default function (userOptions = {}) {\n  // Default options\n  const defaultOptions = getDefaultOptions();\n\n  // Remove `undefined` user options\n  userOptions = dropUndefinedKeys(userOptions);\n\n  // Inject default plugin factories\n  const allPluginsFactories = {\n    jpegtran: imageminJpegtran,\n    pngquant: imageminPngquant,\n    gifsicle: imageminGifsicle,\n    svgo: imageminSvgo,\n    ...(userOptions.plugins)\n  };\n\n  // Get pairs to use array functions\n  const allPluginsFactoriesPairs = Object.entries(allPluginsFactories);\n\n  // Merge 1st level options\n  const pluginOptions = {...defaultOptions, ...userOptions};\n\n  // Merge user options with defaults for each plugin\n  allPluginsFactoriesPairs.reduce((pluginOptionsAcc, [pluginName,]) => {\n    // Remove `undefined` plugin user options\n    const pluginUserOpts = dropUndefinedKeys(userOptions[pluginName] || {});\n\n    pluginOptionsAcc[pluginName] = {...(defaultOptions[pluginName]), ...pluginUserOpts};\n\n    return pluginOptionsAcc;\n  }, pluginOptions);\n\n  // Run factories\n  pluginOptions.plugins = allPluginsFactoriesPairs.map(([pluginName, factoryFunction]) => factoryFunction(pluginOptions[pluginName]));\n\n  const filter = createFilter(pluginOptions.include, pluginOptions.exclude);\n  const logPrefix = \"imagemin:\";\n  let assets = {};\n\n  return {\n    name: \"imagemin\",\n    buildStart () {\n      if (pluginOptions.verbose && pluginOptions.disable) {\n        pluginOptions.disable ? console.log(chalk.yellow.bold(`${logPrefix} Skipping image optimizations.`)) : console.log(chalk.green.bold(`${logPrefix} Optimizing images...`));\n      }\n    },\n    load (id) {\n      if (!filter(id)) {\n        return null;\n      }\n\n      return readFile(id).then(buffer => {\n        const extname = path.extname(id);\n        const name = pluginOptions.preserveTree\n          ? typeof pluginOptions.preserveTree === \"string\"\n            ? path.join(path.dirname(id.replace(`${path.resolve(pluginOptions.preserveTree)}${path.sep}`, \"\")), path.basename(id, extname))\n            : path.join(path.dirname(id.replace(`${process.cwd()}${path.sep}`, \"\")), path.basename(id, extname))\n          : path.basename(id, extname);\n        let hash, outputFileName;\n\n        if (!pluginOptions.disable) {\n          return imagemin.buffer(buffer, {\n            plugins: pluginOptions.plugins\n          }).then(optimizedBuffer => {\n            hash = crypto.createHash(\"sha1\").update(optimizedBuffer).digest(\"hex\").substr(0, pluginOptions.hashLength);\n            outputFileName = path.join(pluginOptions.fileName.replace(/\\[name\\]/i, name).replace(/\\[hash\\]/i, hash).replace(/\\[extname\\]/i, extname));\n            assets[outputFileName] = optimizedBuffer;\n\n            if (pluginOptions.verbose) {\n              const inputSize = buffer.toString().length;\n              const outputSize = optimizedBuffer.toString().length;\n              const smaller = outputSize < inputSize;\n              const difference = Math.round(Math.abs(((outputSize / inputSize) * 100) - 1));\n              console.log(chalk.green.bold(`${logPrefix} Optimized ${outputFileName}: ${smaller ? `~${difference}% smaller ðŸŽ‰` : chalk.red(`~${difference}% bigger ðŸ¤•`)}`));\n            }\n\n            return `export default new URL(\"${outputFileName}\", import.meta.url).href;`;\n          }).catch(error => {\n            this.error(`${logPrefix} Couldn't optimize image: ${error}`);\n          });\n        } else {\n          hash = crypto.createHash(\"sha1\").update(buffer).digest(\"hex\").substr(0, pluginOptions.hashLength);\n          outputFileName = path.join(pluginOptions.publicPath, pluginOptions.fileName.replace(/\\[name\\]/i, name).replace(/\\[hash\\]/i, hash).replace(/\\[extname\\]/i, extname));\n          assets[outputFileName] = buffer;\n\n          return `export default new URL(\"${outputFileName}\", import.meta.url).href;`;\n        }\n      }).catch(error => {\n        this.error(`${logPrefix} Couldn't read asset from disk: ${error}`);\n      });\n    },\n    generateBundle (rollupOptions) {\n      if (!pluginOptions.emitFiles) {\n        return;\n      }\n\n      const base = rollupOptions.dir || path.dirname(rollupOptions.file);\n\n      return Promise.all(Object.keys(assets).map(name => {\n        const assetBase = path.resolve(path.dirname(path.join(base, name)));\n\n        return mkpathAsync(assetBase).then(() => {\n          return writeFile(path.join(base, name), assets[name]).catch(error => {\n            this.error(`${logPrefix} Couldn't write optimized input buffer for ${name}: ${error}`);\n          });\n        });\n      }));\n    }\n  };\n}\n"],"names":[],"mappings":"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"}