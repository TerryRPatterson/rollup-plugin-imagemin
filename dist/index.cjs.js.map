{"version":3,"file":"index.cjs.js","sources":["../src/index.js"],"sourcesContent":["// Built-ins\nimport path from \"path\";\nimport fs from \"fs\";\nimport util from \"util\";\nimport crypto from \"crypto\";\n\n// Plugin-specific\nimport { createFilter } from \"@rollup/pluginutils\";\nimport chalk from \"chalk\";\nimport mkpath from \"mkpath\";\nimport imagemin from \"imagemin\";\nimport imageminJpegtran from \"imagemin-mozjpeg\";\nimport imageminPngquant from \"imagemin-optipng\";\nimport imageminGifsicle from \"imagemin-gifsicle\";\nimport imageminSvgo from \"imagemin-svgo\";\n\n// Promisified methods\nconst readFile = util.promisify(fs.readFile);\nconst writeFile = util.promisify(fs.writeFile);\nconst mkpathAsync = util.promisify(mkpath);\n\n// Returns a new object each time, so that it can't be modified (while it is exported)\n// It is required to export this value for testing\nexport const getDefaultOptions = () => JSON.parse(JSON.stringify({\n  disable: false,\n  verbose: false,\n  emitFiles: true,\n  hashLength: 16,\n  include: \"**/*.{svg,png,jpg,jpeg,gif}\",\n  exclude: \"\",\n  fileName: \"[name]-[hash][extname]\",\n  publicPath: \"\",\n  preserveTree: false,\n  jpegtran: {\n    progressive: true\n  },\n  pngquant: {\n    speed: 1,\n    strip: true\n  },\n  gifsicle: {\n    optimizationLevel: 3\n  },\n  svgo: {\n    precision: 1,\n    multipass: true\n  },\n  plugins: {}\n}));\n\nconst dropUndefinedKeys = obj => Object.entries(obj).reduce((acc, [key, val]) => {\n  if (typeof val !== \"undefined\") {\n    acc[key] = val;\n  }\n\n  return acc;\n}, {});\n\nexport default function (userOptions = {}) {\n  // Default options\n  const defaultOptions = getDefaultOptions();\n\n  // Remove `undefined` user options\n  userOptions = dropUndefinedKeys(userOptions);\n\n  // Inject default plugin factories\n  const allPluginsFactories = {\n    jpegtran: imageminJpegtran,\n    pngquant: imageminPngquant,\n    gifsicle: imageminGifsicle,\n    svgo: imageminSvgo,\n    ...(userOptions.plugins)\n  };\n\n  // Get pairs to use array functions\n  const allPluginsFactoriesPairs = Object.entries(allPluginsFactories);\n\n  // Merge 1st level options\n  const pluginOptions = {...defaultOptions, ...userOptions};\n\n  // Merge user options with defaults for each plugin\n  allPluginsFactoriesPairs.reduce((pluginOptionsAcc, [pluginName,]) => {\n    // Remove `undefined` plugin user options\n    const pluginUserOpts = dropUndefinedKeys(userOptions[pluginName] || {});\n\n    pluginOptionsAcc[pluginName] = {...(defaultOptions[pluginName]), ...pluginUserOpts};\n\n    return pluginOptionsAcc;\n  }, pluginOptions);\n\n  // Run factories\n  pluginOptions.plugins = allPluginsFactoriesPairs.map(([pluginName, factoryFunction]) => factoryFunction(pluginOptions[pluginName]));\n\n  const filter = createFilter(pluginOptions.include, pluginOptions.exclude);\n  const logPrefix = \"imagemin:\";\n  let assets = {};\n\n  return {\n    name: \"imagemin\",\n    buildStart () {\n      if (pluginOptions.verbose && pluginOptions.disable) {\n        pluginOptions.disable ? console.log(chalk.yellow.bold(`${logPrefix} Skipping image optimizations.`)) : console.log(chalk.green.bold(`${logPrefix} Optimizing images...`));\n      }\n    },\n    load (id) {\n      if (!filter(id)) {\n        return null;\n      }\n\n      return readFile(id).then(buffer => {\n        const extname = path.extname(id);\n        const name = pluginOptions.preserveTree\n          ? typeof pluginOptions.preserveTree === \"string\"\n            ? path.join(path.dirname(id.replace(`${path.resolve(pluginOptions.preserveTree)}${path.sep}`, \"\")), path.basename(id, extname))\n            : path.join(path.dirname(id.replace(`${process.cwd()}${path.sep}`, \"\")), path.basename(id, extname))\n          : path.basename(id, extname);\n        let hash, outputFileName;\n\n        if (!pluginOptions.disable) {\n          return imagemin.buffer(buffer, {\n            plugins: pluginOptions.plugins\n          }).then(optimizedBuffer => {\n            hash = crypto.createHash(\"sha1\").update(optimizedBuffer).digest(\"hex\").substr(0, pluginOptions.hashLength);\n            outputFileName = path.join(pluginOptions.fileName.replace(/\\[name\\]/i, name).replace(/\\[hash\\]/i, hash).replace(/\\[extname\\]/i, extname));\n            assets[outputFileName] = optimizedBuffer;\n\n            if (pluginOptions.verbose) {\n              const inputSize = buffer.toString().length;\n              const outputSize = optimizedBuffer.toString().length;\n              const smaller = outputSize < inputSize;\n              const difference = Math.round(Math.abs(((outputSize / inputSize) * 100) - 1));\n              console.log(chalk.green.bold(`${logPrefix} Optimized ${outputFileName}: ${smaller ? `~${difference}% smaller ðŸŽ‰` : chalk.red(`~${difference}% bigger ðŸ¤•`)}`));\n            }\n\n            return `export default new URL(\"${outputFileName}\", import.meta.url).href;`;\n          }).catch(error => {\n            this.error(`${logPrefix} Couldn't optimize image: ${error}`);\n          });\n        } else {\n          hash = crypto.createHash(\"sha1\").update(buffer).digest(\"hex\").substr(0, pluginOptions.hashLength);\n          outputFileName = path.join(pluginOptions.publicPath, pluginOptions.fileName.replace(/\\[name\\]/i, name).replace(/\\[hash\\]/i, hash).replace(/\\[extname\\]/i, extname));\n          assets[outputFileName] = buffer;\n\n          return `export default new URL(\"${outputFileName}\", import.meta.url).href;`;\n        }\n      }).catch(error => {\n        this.error(`${logPrefix} Couldn't read asset from disk: ${error}`);\n      });\n    },\n    generateBundle (rollupOptions) {\n      if (!pluginOptions.emitFiles) {\n        return;\n      }\n\n      const base = rollupOptions.dir || path.dirname(rollupOptions.file);\n\n      return Promise.all(Object.keys(assets).map(name => {\n        const assetBase = path.resolve(path.dirname(path.join(base, name)));\n\n        return mkpathAsync(assetBase).then(() => {\n          return writeFile(path.join(base, name), assets[name]).catch(error => {\n            this.error(`${logPrefix} Couldn't write optimized input buffer for ${name}: ${error}`);\n          });\n        });\n      }));\n    }\n  };\n}\n"],"names":["readFile","util","promisify","fs","writeFile","mkpathAsync","mkpath","getDefaultOptions","JSON","parse","stringify","disable","verbose","emitFiles","hashLength","include","exclude","fileName","publicPath","preserveTree","jpegtran","progressive","pngquant","speed","strip","gifsicle","optimizationLevel","svgo","precision","multipass","plugins","dropUndefinedKeys","obj","Object","entries","reduce","acc","key","val","userOptions","defaultOptions","allPluginsFactories","imageminJpegtran","imageminPngquant","imageminGifsicle","imageminSvgo","allPluginsFactoriesPairs","pluginOptions","pluginOptionsAcc","pluginName","pluginUserOpts","map","factoryFunction","filter","createFilter","logPrefix","assets","name","buildStart","console","log","chalk","yellow","bold","green","load","id","then","buffer","extname","path","join","dirname","replace","resolve","sep","basename","process","cwd","hash","outputFileName","imagemin","optimizedBuffer","crypto","createHash","update","digest","substr","inputSize","toString","length","outputSize","smaller","difference","Math","round","abs","red","catch","error","generateBundle","rollupOptions","base","dir","file","Promise","all","keys","assetBase"],"mappings":"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"}